<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Opium.Wallet"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:materialDesignConverters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:views="clr-namespace:Opium.Wallet.Views"
             x:Class="Opium.Wallet.HamburgerMenuControlControl"
             mc:Ignorable="d" 
             d:DesignHeight="738.667" d:DesignWidth="1017.333">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Themes/HamburgerMenuTemplate.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Opium.Wallet;component/Resources/Theme/BitcoinPrivateTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--  This is the template for the menu items.  -->
            <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type mah:HamburgerMenuIconItem}">
                <Grid Height="48">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl Grid.Column="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{Binding Icon}"
                                    Focusable="False"
                                    IsTabStop="False" />
                    <TextBlock Grid.Column="1"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Text="{Binding Label}" />
                </Grid>
            </DataTemplate>

            <ObjectDataProvider x:Key="DisplayModeEnumValues"
                                MethodName="GetValues"
                                ObjectType="{x:Type mah:SplitViewDisplayMode}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="mah:SplitViewDisplayMode" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="VisibilityEnumValues"
                                MethodName="GetValues"
                                ObjectType="{x:Type Visibility}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="Visibility" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <materialDesignConverters:BrushRoundConverter x:Key="BrushRoundConverter" />

            <Style x:Key="HamburgerMenuCreatorsItemStyle"
                   BasedOn="{StaticResource HamburgerMenuItemStyle}"
                   TargetType="{x:Type ListBoxItem}">
                <Setter Property="mah:ItemHelper.ActiveSelectionBackgroundBrush" Value="Transparent" />
                <Setter Property="mah:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentBaseColorBrush}" />
                <Setter Property="mah:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                <Setter Property="mah:ItemHelper.DisabledSelectedBackgroundBrush" Value="Transparent" />
                <Setter Property="mah:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                <Setter Property="mah:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource GrayBrush9}" />
                <Setter Property="mah:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource GrayBrush9}" />
                <Setter Property="mah:ItemHelper.SelectedBackgroundBrush" Value="Transparent" />
                <Setter Property="mah:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentBaseColorBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                                <Border x:Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Grid Margin="{TemplateBinding BorderThickness}">
                                    <Grid HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:HamburgerMenu}}, Path=ShowSelectionIndicator, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Rectangle x:Name="SelectionIndicator"
                                                   Width="{DynamicResource HamburgerMenuSelectionIndicatorThemeWidth}"
                                                   Height="{DynamicResource HamburgerMenuSelectionIndicatorThemeHeight}"
                                                   Fill="{TemplateBinding Foreground}"
                                                   Focusable="False"
                                                   Opacity="0.0" />
                                    </Grid>
                                    <materialDesign:Ripple Padding="{TemplateBinding Padding}"
                                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                           Content="{TemplateBinding Content}"
                                                           ContentTemplate="{TemplateBinding ContentTemplate}"
                                                           ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                           Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                                           Focusable="False"
                                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mah:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="SelectionIndicator" Property="Opacity" Value="1.0" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mah:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mah:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mah:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="False" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mah:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mah:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="HamburgerMenuCreatorsStyle"
                   BasedOn="{StaticResource {x:Type mah:HamburgerMenu}}"
                   TargetType="{x:Type mah:HamburgerMenu}">
                <Setter Property="ItemContainerStyle" Value="{StaticResource HamburgerMenuCreatorsItemStyle}" />
                <Setter Property="OptionsItemContainerStyle" Value="{StaticResource HamburgerMenuCreatorsItemStyle}" />
                <Setter Property="PaneBackground" Value="{DynamicResource WhiteBrush}" />
                <Setter Property="PaneForeground" Value="{DynamicResource TextBrush}" />
                <Setter Property="ShowSelectionIndicator" Value="True" />
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <Border Grid.Column="0"
                Margin="0"
                BorderBrush="{DynamicResource GrayBrush7}"
                BorderThickness="0">

            <mah:HamburgerMenu x:Name="HamburgerMenuControl"
                                    HamburgerWidth="48"
                                    IsPaneOpen="True"
                                     ItemInvoked="HamburgerMenuControl_OnItemInvoked"
                                    ItemTemplate="{StaticResource MenuItemTemplate}"
                                    OptionsItemTemplate="{StaticResource MenuItemTemplate}"
                                    SelectedIndex="0"
                                    VerticalScrollBarOnLeftSide="False" 
                               PaneBackground="{DynamicResource AccentBaseColorBrush}">
                <!--  Items  -->
                <mah:HamburgerMenu.ItemsSource>
                    <mah:HamburgerMenuItemCollection>
                       
                        <mah:HamburgerMenuIconItem Icon="{iconPacks:Octicons Kind=Home}" Label="Dashboard">
                            <mah:HamburgerMenuIconItem.Tag>
                                <views:HomeView />
                            </mah:HamburgerMenuIconItem.Tag>
                        </mah:HamburgerMenuIconItem>
                        <mah:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=emoticonpoop}" Label="Send">
                            <mah:HamburgerMenuIconItem.Tag>
                                <views:HomeView />
                            </mah:HamburgerMenuIconItem.Tag>
                        </mah:HamburgerMenuIconItem>
                        <mah:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=Heart}" Label="Receive">
                            <mah:HamburgerMenuIconItem.Tag>
                                <views:HomeView />
                            </mah:HamburgerMenuIconItem.Tag>
                        </mah:HamburgerMenuIconItem>
                        <mah:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=history}" Label="History">
                            <mah:HamburgerMenuIconItem.Tag>
                                <views:AddressBookView />
                            </mah:HamburgerMenuIconItem.Tag>
                        </mah:HamburgerMenuIconItem>
                        <mah:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=Account}" Label="Address Book">
                            <mah:HamburgerMenuIconItem.Tag>
                                <UserControl>
                                    <StackPanel Orientation="Vertical">
                                        <mah:ToggleSwitch Margin="0 0 0 5" Header="Lorem ipsum dolor sit amet, consectetur adipiscing elit" />
                                        <mah:ToggleSwitch Margin="0 0 0 5"
                                                               Header="Ut dictum arcu egestas aliquet elementum"
                                                               IsChecked="True" />
                                        <mah:ToggleSwitch Margin="0 0 0 5" Header="Pellentesque ultricies metus quis dui luctus, vel faucibus risus rhoncus" />
                                    </StackPanel>
                                </UserControl>
                            </mah:HamburgerMenuIconItem.Tag>
                        </mah:HamburgerMenuIconItem>
                        
                        <mah:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=Wallet}" Label="Paper Wallet">
                            <mah:HamburgerMenuIconItem.Tag>
                                <views:AddressBookView />
                            </mah:HamburgerMenuIconItem.Tag>
                        </mah:HamburgerMenuIconItem>
                        <mah:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=Bitcoin}" Label="Exchanges">
                            <mah:HamburgerMenuIconItem.Tag>
                                <views:AddressBookView />
                            </mah:HamburgerMenuIconItem.Tag>
                        </mah:HamburgerMenuIconItem>
                        <mah:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=lanconnect}" Label="Network">
                            <mah:HamburgerMenuIconItem.Tag>
                                <views:AddressBookView />
                            </mah:HamburgerMenuIconItem.Tag>
                        </mah:HamburgerMenuIconItem>
                        <mah:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=HelpBox}" Label="Help">
                            <mah:HamburgerMenuIconItem.Tag>
                                <views:AddressBookView />
                            </mah:HamburgerMenuIconItem.Tag>
                        </mah:HamburgerMenuIconItem>
                    </mah:HamburgerMenuItemCollection>
                </mah:HamburgerMenu.ItemsSource>

                <!--  Options  -->
                <mah:HamburgerMenu.OptionsItemsSource>
                    <mah:HamburgerMenuItemCollection>
                        <mah:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=Settings}" Label="Settings">
                            <mah:HamburgerMenuIconItem.Tag>
                                <views:HomeView />
                            </mah:HamburgerMenuIconItem.Tag>
                        </mah:HamburgerMenuIconItem>
                    </mah:HamburgerMenuItemCollection>
                </mah:HamburgerMenu.OptionsItemsSource>

                <mah:HamburgerMenu.ContentTemplate>
                    <DataTemplate DataType="{x:Type mah:HamburgerMenuIconItem}">
                        <Grid Margin="20 0 10 0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0"
                                       Margin="0 15 0 5"
                                       Padding="0"
                                       FontFamily="{DynamicResource HeaderFontFamily}"
                                       FontSize="{DynamicResource HeaderFontSize}"
                                       Text="{Binding Label}" />
                            <ScrollViewer Grid.Row="1"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="Disabled"
                                          VerticalScrollBarVisibility="Auto">
                                <ContentControl Content="{Binding Tag}" Focusable="False" />
                            </ScrollViewer>
                        </Grid>
                    </DataTemplate>
                </mah:HamburgerMenu.ContentTemplate>

            </mah:HamburgerMenu>

        </Border>
    </Grid>
</UserControl>
